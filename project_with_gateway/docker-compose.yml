version: "3.8"

volumes:
  rabbitmq_data:
  pgdata: 
  kongadata:

networks:
  kong-net:
    driver: bridge


services:
  
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata

  ###################################
  # Geolocation: The Geolocation microservice
  ###################################
  geolocation:
    build:
      context: ./
      dockerfile: geolocation.Dockerfile
    image: 02031998/geolocation:g4th
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
        - "5001:5001"
    networks:
      - kong-net
 
  #######################################################
  # Ingame_Shop: The Ingame_Shop microservice
  #######################################################
  ingame_shop:
    build:
      context: ./
      dockerfile: ingame_shop.Dockerfile
    image: 02031998/ingame_shop:g4th
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/ingame_shop
      PYTHONUNBUFFERED: 1
    ports:
        - "5005:5005"
    networks:
      - kong-net

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - kong-net
      
  #################################################
  # Activity Log: The Activity Log microservice
  #################################################
  activity:
    build:
      context: ./
      dockerfile: activity.Dockerfile
    image: 02031998/activity:g4th
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/activitylog
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    networks:
      - kong-net

  ###################################
  # Error: The Error microservice
  ###################################
  error:
    build:
      context: ./
      dockerfile: error.Dockerfile
    image: 02031998/error:g4th
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/errorlog
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    networks:
      - kong-net

  ###############################################
  # Box: The Box microservice
  ###############################################
  box:
    build:
      context: ./
      dockerfile: box.Dockerfile
    image: 02031998/box:g4th
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/box
      PYTHONUNBUFFERED: 1
    ports:
        - "5002:5002"
    networks:
      - kong-net

  ##################################
  # User: The User microservice
  ##################################
  user:
    build:
      context: ./
      dockerfile: user.Dockerfile
    image: 02031998/user:g4th
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/user
      PYTHONUNBUFFERED: 1
    ports:
        - "5004:5004"
    networks:
      - kong-net
    
  ###############################################
  # Order: The Order microservice
  ###############################################
  order:
    build:
      context: ./
      dockerfile: order.Dockerfile
    image: 02031998/order:g4th
    restart: always
    depends_on:
      - ingame_shop
      - user
      - activity
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      ingame_shop_URL: http://localhost:8000/ingame_shop/order
      user_URL: http://localhost:8000/user/purchase/
      PYTHONUNBUFFERED: 1
    ports:
        - "5007:5007"
    networks:
      - kong-net
  
  ###############################################
  # Subscription: The Subscription microservice
  ###############################################
  subscription:
    build:
      context: ./
      dockerfile: subscription.Dockerfile
    image: 02031998/subscription:g4th
    restart: always
    depends_on:
      - user
      - activity
      - error
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      user_URL: http://localhost:8000/user/membership/
      PYTHONUNBUFFERED: 1
    ports:
        - "5006:5006"
    networks:
      - kong-net

  ###############################################
  # Box_Opening: The Box_Opening microservice
  ###############################################
  box_opening:
    build:
      context: ./
      dockerfile: box_opening.Dockerfile
    image: 02031998/box_opening:g4th
    restart: always
    depends_on:
      - geolocation
      - box
      - user
      - activity
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      geolocation_URL: http://localhost:8000/geolocation
      box_nearest_URL: http://localhost:8000/search?latitude=
      box_update_URL: http://localhost:8000/open
      user_URL: http://localhost:8000/user/openbox/
      PYTHONUNBUFFERED: 1
    ports:
        - "5003:5003"
    networks:
      - kong-net

  ###############################################
  # Create_Box: The Create_Box microservice
  ###############################################
  create_box:
    build:
      context: ./
      dockerfile: create_box.Dockerfile
    image: 02031998/create_box:g4th
    restart: always
    depends_on:
      - geolocation
      - box
      - activity
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      checkbox_URL: http://localhost:8000/user/box_count/
      geolocation_URL: http://localhost:8000/geolocation
      box_create_URL: http://localhost:8000/box/
      usebox_URL: http://localhost:8000/user/usebox
      PYTHONUNBUFFERED: 1
    ports:
        - "5008:5008"
    networks:
      - kong-net